/*
USACO 2017 January Contest, Silver
Problem 2. Hoof, Paper, Scissors
*/

import java.io.*;
import java.util.*;
import java.lang.*;
 
class hps
{
   public static void main(String[] args) throws IOException
   {
      BufferedReader br = new BufferedReader(new FileReader("hps.in"));
      PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("hps.out")));
      StringTokenizer st = new StringTokenizer(br.readLine());
      int n = Integer.parseInt(st.nextToken());
      HashMap<Integer, ArrayList<Integer>> hm = new HashMap<Integer, ArrayList<Integer>>();
      int h = 0;
      int p = 0;
      int s = 0;
      for(int x = 0; x < n; x++)
      {
         st = new StringTokenizer(br.readLine());
         String val = st.nextToken();
         if(val.equals("H"))
            h++;
         else if(val.equals("P"))
            p++;
         else
            s++;
         ArrayList<Integer> temp = new ArrayList<Integer>(Arrays.asList(h, p, s));
         hm.put(x, temp);
      }
      int max = 0;
      for(int y = 0; y < n; y++)
      {
         ArrayList<Integer> al = hm.get(y);
         int maxval = Math.max(al.get(0), Math.max(al.get(1), al.get(2)));
         int hother = hm.get(n-1).get(0) - al.get(0);
         int pother = hm.get(n-1).get(1) - al.get(1);
         int sother = hm.get(n-1).get(2) - al.get(2); 
         int maxval2 = Math.max(hother, Math.max(pother, sother));
         if(maxval + maxval2 > max)
            max =  maxval + maxval2;
      }
      out.println(max);
      out.close();
   }
}
